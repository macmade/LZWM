/*******************************************************************************
 * Copyright (c) 2011, Jean-David Gadina - www.xs-labs.com
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/
 
/* $Id$ */

/*!
 * @header      macros.h
 * @copyright   (c) 2011 - Jean-David Gadina - www.xs-labs.com
 * @abstract    Program's macros
 */

#ifndef _LZWM_MACROS_H_
#define _LZWM_MACROS_H_
#pragma once

#ifdef __cplusplus
extern "C" {
#endif

/* Local includes */
#include "stdc/c89.h"

/*!
 * @define      __FATAL
 * @abstract    Issues a fatal error message on stderr and aborts the program's execution (exit code: 1)
 * @param       FILE    The file path
 * @param       LINE    The line number
 * @param       ...     Optional arguments
 */
#define __FATAL( FILE, LINE, ... )  \
    fprintf                         \
    (                               \
        stderr,                     \
        "!!! FATAL ERROR !!!\n"     \
        "\n"                        \
        "    - File: %s\n"          \
        "    - Line: %i\n",         \
        strrchr( FILE, '/' ) + 1,   \
        LINE                        \
    );                              \
    fprintf                         \
    (                               \
        stderr,                     \
        __VA_ARGS__                 \
    );                              \
    fprintf( stderr, "\n" );        \
    pthread_exit( EXIT_SUCCESS );   \
    exit( EXIT_FAILURE );

/*!
 * @define      FATAL
 * @abstract    Issues a fatal error message on stderr and aborts the program's execution (exit code: 1)
 * @param       ...     Optional arguments
 */
#define FATAL( ... ) __FATAL( __FILE__, __LINE__, __VA_ARGS__ )

/*!
 * @define      ERROR
 * @abstract    Issues an error message on stderr and aborts the program's execution (exit code: 1)
 * @param       ...     Optional arguments
 */
#define ERROR( ... )                \
    fprintf                         \
    (                               \
        stderr,                     \
        "Error: "                   \
    );                              \
    fprintf                         \
    (                               \
        stderr,                     \
        __VA_ARGS__                 \
    );                              \
    fprintf( stderr, "\n" );        \
    pthread_exit( EXIT_SUCCESS );   \
    exit( EXIT_FAILURE );

#ifdef __cplusplus
}
#endif

#endif /* _LZWM_MACROS_H_ */

